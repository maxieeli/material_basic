{"value":[{"file":"NodeList.d.ts","content":"import type { CSSProperties, KeyboardEventHandler, FocusEventHandler } from 'react';\nimport { BasicDataNode, FlattenNode, Key, DataEntity, DataNode, ScrollTo } from './interface';\nexport declare const MOTION_KEY: string;\nexport declare const MotionEntity: DataEntity;\nexport interface NodeListRef {\n    scrollTo: ScrollTo;\n    getIndentWidth: () => number;\n}\ninterface NodeListProps<TreeDataType extends BasicDataNode> {\n    prefixCls: string;\n    style: CSSProperties;\n    data: FlattenNode<TreeDataType>[];\n    motion: any;\n    focusable?: boolean;\n    activeItem: FlattenNode<TreeDataType>;\n    focused?: boolean;\n    tabIndex: number;\n    checkable?: boolean;\n    selectable?: boolean;\n    disabled?: boolean;\n    expandedKeys: Key[];\n    selectedKeys: Key[];\n    checkedKeys: Key[];\n    loadedKeys: Key[];\n    loadingKeys: Key[];\n    halfCheckedKeys: Key[];\n    keyEntities: Record<Key, DataEntity<any>>;\n    dragging: boolean;\n    dragOverNodeKey: Key;\n    dropPosition: number;\n    height: number;\n    itemHeight: number;\n    virtual?: boolean;\n    onKeyDown?: KeyboardEventHandler<HTMLDivElement>;\n    onFocus?: FocusEventHandler<HTMLDivElement>;\n    onBlur?: FocusEventHandler<HTMLDivElement>;\n    onActiveChange: (key: Key) => void;\n    onListChangeStart: () => void;\n    onListChangeEnd: () => void;\n}\n/**\n* We only need get visible content items to play the animation.\n*/\nexport declare function getMinimumRangeTransitionRange(list: FlattenNode[], virtual: boolean, height: number, itemHeight: number): FlattenNode<DataNode>[];\ndeclare const NodeList: import(\"react\").ForwardRefExoticComponent<NodeListProps<any> & import(\"react\").RefAttributes<NodeListRef>>;\nexport default NodeList;\n","sourceFile":"/Users/liqipeng/Desktop/material_basic/packages/tree/src/NodeList.tsx"}],"type":"Array"}