{"value":[{"file":"Tooltip.d.ts","content":"import type { ReactNode, CSSProperties, ReactElement } from 'react';\nimport type { TriggerProps } from 'rc-trigger';\nimport type { AlignType, ActionType } from 'rc-trigger/lib/interface';\nexport interface TooltipProps extends Pick<TriggerProps, 'onPopupAlign' | 'builtinPlacements'> {\n    trigger?: ActionType | ActionType[];\n    defaultVisible?: boolean;\n    visible?: boolean;\n    placement?: string;\n    /** Config popup motion */\n    motion?: TriggerProps['popupMotion'];\n    onVisibleChange?: (visible: boolean) => void;\n    afterVisibleChange?: (visible: boolean) => void;\n    overlay: (() => ReactNode) | ReactNode;\n    overlayStyle?: CSSProperties;\n    overlayClassName?: string;\n    prefixCls?: string;\n    mouseEnterDelay?: number;\n    mouseLeaveDelay?: number;\n    getTooltipContainer?: (node: HTMLElement) => HTMLElement;\n    destroyTooltipOnHide?: boolean | {\n        keepParent?: boolean;\n    };\n    align?: AlignType;\n    showArrow?: boolean;\n    arrowContent?: ReactNode;\n    id?: string;\n    children?: ReactElement;\n    popupVisible?: boolean;\n    overlayInnerStyle?: CSSProperties;\n    zIndex?: number;\n}\ndeclare const _default: import(\"react\").ForwardRefExoticComponent<TooltipProps & import(\"react\").RefAttributes<unknown>>;\nexport default _default;\n","sourceFile":"/Users/liqipeng/Desktop/material_basic/packages/tooltip/src/Tooltip.tsx"}],"type":"Array"}