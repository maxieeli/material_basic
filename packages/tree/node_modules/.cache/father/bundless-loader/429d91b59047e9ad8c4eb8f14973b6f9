{"value":{"content":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { memo } from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Indent = function Indent(_ref) {\n  var prefixCls = _ref.prefixCls,\n      level = _ref.level,\n      isStart = _ref.isStart,\n      isEnd = _ref.isEnd;\n  var baseClassName = \"\".concat(prefixCls, \"-indent-unit\");\n  var list = [];\n\n  for (var i = 0; i < level; i += 1) {\n    var _classNames;\n\n    list.push( /*#__PURE__*/_jsx(\"span\", {\n      className: classNames(baseClassName, (_classNames = {}, _defineProperty(_classNames, \"\".concat(baseClassName, \"-start\"), isStart[i]), _defineProperty(_classNames, \"\".concat(baseClassName, \"-end\"), isEnd[i]), _classNames))\n    }, i));\n  }\n\n  return /*#__PURE__*/_jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"\".concat(prefixCls, \"-indent\"),\n    children: list\n  });\n};\n\nexport default /*#__PURE__*/memo(Indent);","options":{"ext":".js","declaration":true}},"type":"Object"}