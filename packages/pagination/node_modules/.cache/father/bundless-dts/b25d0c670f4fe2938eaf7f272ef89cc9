{"value":[{"file":"Pagination.d.ts","content":"import { Component } from 'react';\nimport { PaginationProps } from './types';\ndeclare class Pagination extends Component<PaginationProps, any> {\n    static defaultProps: any;\n    constructor(props: any);\n    componentDidUpdate(prevProps: any, prevState: any): void;\n    static getDerivedStateFromProps(props: any, prevState: any): any;\n    getJumpPrevPage: () => number;\n    getJumpNextPage: () => number;\n    /**\n     * computed icon node that need to be rendered.\n     * @param {React.ReactNode | React.ComponentType<PaginationProps>} icon received icon.\n     * @returns {React.ReactNode}\n     */\n    getItemIcon: (icon: any, label: any) => any;\n    getValidValue(e: any): any;\n    savePaginationNode: (node: any) => void;\n    isValid: (page: any) => boolean;\n    shouldDisplayQuickJumper: () => boolean | object;\n    handleKeyDown: (e: any) => void;\n    handleKeyUp: (e: any) => void;\n    handleBlur: (e: any) => void;\n    changePageSize: (size: any) => void;\n    handleChange: (page: any) => any;\n    prev: () => void;\n    next: () => void;\n    jumpPrev: () => void;\n    jumpNext: () => void;\n    hasPrev: () => boolean;\n    hasNext: () => boolean;\n    getShowSizeChanger(): boolean;\n    runIfEnter: (event: any, callback: any, ...restParams: any) => void;\n    runIfEnterPrev: (e: any) => void;\n    runIfEnterNext: (e: any) => void;\n    runIfEnterJumpPrev: (e: any) => void;\n    runIfEnterJumpNext: (e: any) => void;\n    handleGoTO: (e: any) => void;\n    renderPrev(prevPage: any): string | number | boolean | import(\"react\").ReactFragment | import(\"react\").DetailedReactHTMLElement<unknown, HTMLElement>;\n    renderNext(nextPage: any): string | number | boolean | import(\"react\").ReactFragment | import(\"react\").DetailedReactHTMLElement<unknown, HTMLElement>;\n    render(): JSX.Element;\n}\nexport default Pagination;\n","sourceFile":"/Users/liqipeng/Desktop/material_basic/packages/pagination/src/Pagination.tsx"}],"type":"Array"}