{"value":{"content":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport CascaderContext from \"../context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Checkbox(_ref) {\n  var _classNames;\n\n  var prefixCls = _ref.prefixCls,\n      checked = _ref.checked,\n      halfChecked = _ref.halfChecked,\n      disabled = _ref.disabled,\n      onClick = _ref.onClick;\n\n  var _useContext = useContext(CascaderContext),\n      checkable = _useContext.checkable;\n\n  var customCheckbox = typeof checkable !== 'boolean' ? checkable : null;\n  return /*#__PURE__*/_jsx(\"span\", {\n    className: classNames(\"\".concat(prefixCls), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checked\"), checked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-indeterminate\"), !checked && halfChecked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames)),\n    onClick: onClick,\n    children: customCheckbox\n  });\n}","options":{"ext":".js","declaration":true}},"type":"Object"}